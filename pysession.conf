# --------------------------------------------------------------------------- #
# config file for pysession.py
# --------------------------------------------------------------------------- #
# In this file, we define the device Prompts, speical Commandss, and default 
# values, hence we don't need to hard-code these variables in library.  When 
# we add more OS support, just modify conf file instead of changing the code.
# --------------------------------------------------------------------------- #
# Currently, we support
# [Delimiter]
# [DefaultValues]
# [PromptsToSendSpace]
# [PromptsToSendUser]
# [PromptsToSendPassword]
# [PromptsOfLogin]
# [PromptsOfEnable]
# [CommandsToEnable]
# [CommandsTo$changeprompts]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

# --------------------------------------------------------------------------- #
# Delimiter
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
[Delimiter]
=

# --------------------------------------------------------------------------- #
# Default Values
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
[DefaultValues]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
MustEnable    = True
LogFilePrefix = log__
LogFileDir    = /tmp
MaxRead       = 327680
ShortTimeout  = 10
LongTimeout   = 240
DebugLevel    = 0

# --------------------------------------------------------------------------- #
# Special Prompts for stage of login via console
# --------------------------------------------------------------------------- #
# For the console connection, for these prompts, send exit 
# 1) Brocade:NetIron,  MP-OS> 
# 2) Brocade:NetIron,  LP-32>, LP-1#
# 3) Brocade:NetIron/Cisco:IOS, hostname(config-if-e1/1)#
# 4) Unknown:Terminal Server
# * * * ttyS5 is being used by (pid=30935) !!!
# 1 - Initiate a regular session
# 2 - Initiate a sniff session
# ......
# Enter your option : 
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
[Prompt.Stage.Login.Console]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
MP-OS>                                              = exit
LP-\d+[>|#]                                         = exit
\w*\(config.*\)#                                    = exit
1 - Initiate a regular session.*Enter your option : = 1$

# --------------------------------------------------------------------------- #
# Prompts for all stages, jump/login/session, 
# --------------------------------------------------------------------------- #
# 1. Brocade NetIron: page break
# --More--, next page: Space  ! login/enable mode, eliminatable by "skip"
# --More--, page: Space       ! MP-OS> mode, uneliminatable by "skip"
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
[Prompt.Stage.All]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
--More--, next page: Space        = $space
--More--, page: Space             = $space
Are you sure.*enter 'y' or 'n'.*: = y$
the reload without saving the running config?.*enter 'y' or 'n'.*= y$

# --------------------------------------------------------------------------- #
# Prompts for login/jump stage
# --------------------------------------------------------------------------- #
# 1. input user:     1) N|name: 2) L|login:
# 2. input password: 1) P|password:
# 3. privilaged_mode 1) \S#   
# 4. reach login:    1) \w$   ! unix login, user@hostname$
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
[Prompt.Stage.Jump.Login]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
ame:     = $user
ogin:    = $user
assword: = $password
\S#      = $privilaged_mode
\S$      = $user_mode
\S>      = $user_mode

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
[Prompt.Parse.Prompt]
# 1. Brocade NI cmd:reload
# Are you sure? (enter 'y' or 'n'):                    ! y$ --> just send 'y'
# the reload without saving the running config?.*enter 'y' or 'n'.*= y$ ! 'y'
MP-OS>            = $mp_os_mode
LP-\d+[>|#]       = $lp_mode
\w*\(config.*\)#  = $config_mode
\S#               = $privilaged_mode
\S$               = $user_mode
[^-]>             = $user_mode

# --------------------------------------------------------------------------- #
# Special Commands: 
# --------------------------------------------------------------------------- #
# 1) change session Prompts; call parse_prompt after sendline
# end
# ena.* (enable)
# ex.* (exit)
# rc.* (rconsole)
# dm mon.* (dm monitor)
# --------------------------------------------------------------------------- #
# 2) enable, change stage to enable so to send enable password if prompted
# ena.* (enble)
# --------------------------------------------------------------------------- #
# 3) prettylog, save output in pretty format like show command
# sh.* (show)
# --------------------------------------------------------------------------- #
# 4) debug command, need to set debug dest to me
# deb.* (debug)
# --------------------------------------------------------------------------- #
# 5) nowait command, 1) short timeout, 2) no parse_prompt if timeout
# rel.* (reload)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
[Command.Special]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
^end$     = $changeprompt
^ena.*    = $changeprompt
^ex.*     = $changeprompt
^rc.*     = $changeprompt
^dm mon.* = $changeprompt
^ena.*    = $enable
^sh.*     = $prettylog
^deb.*    = $debug
^rel.*    = $nowait

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
[Command.With.Prompt = reload]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
Are you sure? \(enter 'y' or 'n'\): = y$

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
[Command.With.Prompt = no route-o]
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
Are you sure? \(enter 'y' or 'n'\): = y$
